# Generated by Django 3.2 on 2023-01-05 07:26

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='ExtensionProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField()),
                ('shortdescription', models.CharField(blank=True, max_length=250, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='extensionprogram_coverimages/')),
                ('duration', models.DurationField(blank=True, null=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='program_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Extension Program',
                'verbose_name_plural': 'Extension Programs',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='ExtensionProgram_Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_leader', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='programmember_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('extensionprogram', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.extensionprogram')),
                ('member', models.ForeignKey(limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='program_member', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Extension Program Member',
                'verbose_name_plural': 'Extension Program Members',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='ExtensionProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('slug', models.SlugField()),
                ('shortdescription', models.CharField(blank=True, max_length=250, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='extensionproject_coverimages/')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('extensionprogram', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.extensionprogram')),
            ],
            options={
                'verbose_name': 'Extension Projects',
                'verbose_name_plural': 'Extension Projects',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='ExtensionProject_Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_leader', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projectmember_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('extensionproject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.extensionproject')),
                ('member', models.ForeignKey(limit_choices_to={'is_leader': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_member', to='workshop.extensionprogram_member')),
            ],
            options={
                'verbose_name': 'Extension Project Member',
                'verbose_name_plural': 'Extension Project Members',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('slug', models.SlugField()),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('is_taken', models.BooleanField(default=False)),
                ('is_open', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lesson_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('slug', models.SlugField()),
                ('shortdescription', models.CharField(blank=True, max_length=250, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='workshop_coverimages/')),
                ('duration', models.DurationField(blank=True, null=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workshop_author', to=settings.AUTH_USER_MODEL)),
                ('category', models.ManyToManyField(blank=True, to='workshop.Category')),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('extensionproject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.extensionproject')),
            ],
            options={
                'verbose_name': 'Workshop',
                'verbose_name_plural': 'Workshops',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='WorkshopParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('is_finished', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workshopparticipant_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('participant', models.ForeignKey(limit_choices_to={'is_participant': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participant', to=settings.AUTH_USER_MODEL)),
                ('workshop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.workshop')),
            ],
            options={
                'verbose_name': 'Workshop Partcipant',
                'verbose_name_plural': 'Workshop Participants',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='WorkshopFacilitator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workshopfacilitator_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('facilitator', models.ForeignKey(limit_choices_to={'is_leader': False}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workshop_facilitator', to='workshop.extensionproject_member')),
                ('workshop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.workshop')),
            ],
            options={
                'verbose_name': 'Workshop Facilitator',
                'verbose_name_plural': 'Workshop Facilitators',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='LessonFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='lesson_files/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='lesson_images/')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessonfile_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.lesson')),
            ],
            options={
                'verbose_name': 'Lesson File',
                'verbose_name_plural': 'Lesson Files',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='LessonActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('slug', models.SlugField()),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='lessonactivity_files/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='lessonactivity_images/')),
                ('is_open', models.BooleanField(default=False)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('total_items', models.FloatField(default=0.0)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessonactivity_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.lesson')),
            ],
            options={
                'verbose_name': 'Lesson Activity',
                'verbose_name_plural': 'Lesson Activities',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='participant',
            field=models.ManyToManyField(blank=True, to='workshop.WorkshopParticipant'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='workshop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.workshop'),
        ),
        migrations.CreateModel(
            name='ExtensionProject_Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('file', models.FileField(blank=True, null=True, upload_to='extensionproject_files/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='extensionproject_images/')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projectfiles_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('extensionproject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.extensionproject')),
            ],
            options={
                'verbose_name': 'Extension Project Files',
                'verbose_name_plural': 'Extension Project Files',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='ExtensionProgram_Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('file', models.FileField(blank=True, null=True, upload_to='extensionprogram_files/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='extensionprogram_images/')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, limit_choices_to={'is_facilitator': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='programfiles_author', to=settings.AUTH_USER_MODEL)),
                ('co_facilitator', models.ManyToManyField(blank=True, limit_choices_to={'is_facilitator': True}, to=settings.AUTH_USER_MODEL)),
                ('extensionprogram', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.extensionprogram')),
            ],
            options={
                'verbose_name': 'Extension Program Files',
                'verbose_name_plural': 'Extension Program Files',
                'ordering': ('-date_updated',),
            },
        ),
        migrations.CreateModel(
            name='ActivityOutput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('text_answer', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='activityoutput_files/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='activityoutput_images/')),
                ('is_checked', models.BooleanField(default=False)),
                ('score', models.FloatField(blank=True, default=0.0)),
                ('time_submitted', models.DateTimeField(auto_now_add=True, null=True)),
                ('feedback', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('lessonactivity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.lessonactivity')),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.workshopparticipant')),
            ],
            options={
                'verbose_name': 'Activity Output',
                'verbose_name_plural': 'Activity Outputs',
                'ordering': ('-date_updated',),
            },
        ),
    ]
